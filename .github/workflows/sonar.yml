name: Advanced CI Pipeline

on:
  workflow_dispatch:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

jobs:
  build:
    runs-on: self-hosted

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Restore dependencies
      if: hashFiles('pom.xml') != ''
      run: mvn dependency:resolve

    - name: Build the application
      if: hashFiles('pom.xml') != ''
      run: mvn clean package

    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts-${{ github.ref_name }}-${{ github.sha }}
        path: target/*.war

  test:
    runs-on: self-hosted
    needs: build
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run JUnit Tests
      run: mvn clean test

    - name: Upload Test Results
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ github.ref_name }}-${{ github.sha }}
        path: target/surefire-reports/
        if-no-files-found: warn

  code_coverage:
    runs-on: self-hosted
    needs: test
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Run Code Coverage with JaCoCo
      run: mvn clean verify jacoco:report

    - name: Upload Coverage Reports
      uses: actions/upload-artifact@v4
      with:
        name: code-coverage-${{ github.ref_name }}-${{ github.sha }}
        path: '**/target/site/jacoco/jacoco.xml'

  sonarcloud_scan:
    runs-on: self-hosted
    needs: [ build, test, code_coverage ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download Coverage Report
      uses: actions/download-artifact@v4
      with:
        name: code-coverage-${{ github.ref_name }}-${{ github.sha }}
        path: target/site/jacoco/

    - name: Verify Coverage Report Exists
      run: ls -l target/site/jacoco || echo "Coverage report not found"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@master
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      with:
        projectBaseDir: .
        args: >
          -Dsonar.projectKey=Piyush-ngro_task1 -Dsonar.organization=piyush-ngro-1 -Dsonar.host.url=https://sonarcloud.io -Dsonar.java.binaries=target/classes -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml
